{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "This playbook gets the parent playbook action results and checks to see if there were any action failures and sends an email if failures are found. You should call this playbook in End or on_finish block of your playbook for the best results. This playbook will only gather the information on the 'parent' playbook it is attached to.",
            "hash": "b8f45aef83a0f936e422ec05e858613aa0e8d596",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c20365fc-2d1a-42b6-b57a-b2c4ddc05279",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "de0dee11-37bd-4cdf-8a86-e578e792cf04",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9b88c74f-f22e-414a-87c9-108a9407fbcc",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 9
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cfc93dfd-1fb6-4d50-8916-f14dc40b5149",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "01ebbb11-24f5-4fd8-8ee6-07ce2e5c5845",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3d4a09ac-363e-4d00-b379-188ab6728bd9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 10
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "05ddcfa2-aee8-41d2-87d6-3913559cb2b3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d29227ae-6dfe-4041-89f4-cc2eae9dfe72",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "06ff2365-b3cf-4d72-ba9e-278b4992f60b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 53
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "46279a3e-3c67-49b8-8ad7-1df2d4f97f19",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "06ff2365-b3cf-4d72-ba9e-278b4992f60b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "59db32e1-2976-42c0-a9b6-924174538426",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 56
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8a4e9f3a-38a4-47d0-b0d4-a559b94132e5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3830e228-4ab4-4051-b6f7-5c30f199e71a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc260afa-9d2f-440d-bee7-41cda54b0c5f",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 69
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "566c05eb-bf7b-4057-931f-529f2b46b6d3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d29227ae-6dfe-4041-89f4-cc2eae9dfe72",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc260afa-9d2f-440d-bee7-41cda54b0c5f",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 71
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3cd8a55f-14b3-46f6-b725-72ed0e90d76d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3d4a09ac-363e-4d00-b379-188ab6728bd9",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d29227ae-6dfe-4041-89f4-cc2eae9dfe72",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 88
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'get_playbook_id' block\n    get_playbook_id(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "01ebbb11-24f5-4fd8-8ee6-07ce2e5c5845",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 17,
                        "line_start": 9,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 20
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 104
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "115f4ac9-0f76-455a-bc06-d1250701cb6c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0f75c225-617d-48d7-9cc4-dc18a2764259",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3830e228-4ab4-4051-b6f7-5c30f199e71a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 148
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "390dd65f-8ac4-4592-8657-1b1a6c8d165d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "29821b32-71dc-4019-a3d0-c0924dfa010b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de0dee11-37bd-4cdf-8a86-e578e792cf04",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 290
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "26f35cfc-8ac6-4688-be1c-882841366192",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bc330465-7eaf-4baf-acd6-4a5e81bfda24",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bce36495-c207-4a33-9d81-95f6d60c1ec6",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 464
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "15c05054-63d5-480e-b897-7da8fd8aca5f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "59db32e1-2976-42c0-a9b6-924174538426",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "29821b32-71dc-4019-a3d0-c0924dfa010b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 475
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all detals of actions \n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "send failed playbook email, get app run data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cc260afa-9d2f-440d-bee7-41cda54b0c5f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 460,
                        "line_start": 447,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 17,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2100,
                            "y": 520
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 484
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a36c1a40-1229-447a-9b08-41cebfb33b23",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "00290156-265d-46be-9801-86b6cc8fee68",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0f75c225-617d-48d7-9cc4-dc18a2764259",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 542
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c32bbffe-e728-496e-b075-4d86674ab1cc",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9b88c74f-f22e-414a-87c9-108a9407fbcc",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "53ca3cb0-45a7-475f-a572-0202adfdef90",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 555
                    },
                    {
                        "action": "get data",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "headers": "",
                            "location": "playbook_action_run_url:formatted_data",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "2.1.15",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "phantom_rest",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "headers": "",
                                    "location": "playbook_action_run_url:formatted_data",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 180,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom_rest",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            "false"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 2,
                                        "required": false
                                    },
                                    "location": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint?query=string)",
                                        "key": "location",
                                        "order": 0,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 1,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "180",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get playbook action runs"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_playbook_action_runs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('get_playbook_action_runs() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'get_playbook_action_runs' call\n    formatted_data_1 = phantom.get_format_data(name='playbook_action_run_url')\n\n    parameters = []\n    \n    # build parameters list for 'get_playbook_action_runs' call\n    parameters.append({\n        'headers': \"\",\n        'location': formatted_data_1,\n        'verify_certificate': False,\n    })\n\n    phantom.act(\"get data\", parameters=parameters, assets=['phantom_rest'], callback=check_action_runs, name=\"get_playbook_action_runs\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get parent playbook data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get playbook action runs",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9b88c74f-f22e-414a-87c9-108a9407fbcc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 38,
                        "line_start": 17,
                        "message": "Configuring now",
                        "name": "get data",
                        "notes": "Get all the action runs from the playbook",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1960,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "get_playbook_action_runs",
                        "required_params": {
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 557
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "084dea7a-0124-452e-a3ec-f67cc1445cf6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bce36495-c207-4a33-9d81-95f6d60c1ec6",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "00290156-265d-46be-9801-86b6cc8fee68",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 558
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "26b656e3-70b8-4866-b13d-3862655a4127",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "adddbf49-2055-49fc-b02f-b8108ed12565",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc260afa-9d2f-440d-bee7-41cda54b0c5f",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 613
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def check_parent_playbook_id(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('check_parent_playbook_id() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"get_playbook_id:custom_function:parent_pb_run_id\", \"!=\", 0],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        playbook_run_data_url(action=action, success=success, container=container, results=results, handle=handle)\n        return\n\n    # call connected blocks for 'else' condition 2\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "check parent playbook id",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d29227ae-6dfe-4041-89f4-cc2eae9dfe72",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 99,
                        "line_start": 80,
                        "name": "decision",
                        "notes": "Checks for missing parent playbook id\n\nGREEN: If found Parent Playbook Id continue to get action run data\nPURPLE: No Parent Playbook id found exit playbook.",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "get_playbook_id:custom_function:parent_pb_run_id",
                                        "value": "0"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 860,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "check_parent_playbook_id",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 688
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 8
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def playbook_check(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('playbook_check() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_parent_playbook_data:action_result.data.*.response_body.status\", \"==\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        action_block(action=action, success=success, container=container, results=results, handle=handle)\n        return\n\n    # call connected blocks for 'else' condition 2\n    join_playbook_email_body(action=action, success=success, container=container, results=results, handle=handle)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get app run data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "playbook check",
                        "description": "Checks playbook successful or not",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "00290156-265d-46be-9801-86b6cc8fee68",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 429,
                        "line_start": 408,
                        "name": "decision",
                        "notes": "Checks for playbook success\n\nGREEN: Found \"success\" status\nPURPLE: Found possible failure status",
                        "number": 8,
                        "order": 15,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "get_parent_playbook_data:action_result.data.*.response_body.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1060,
                            "y": 300
                        },
                        "previous_function": "",
                        "previous_name": "playbook_check",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 701
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "91ab88d7-8366-49a6-b89b-0d28bb12cb0c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "00290156-265d-46be-9801-86b6cc8fee68",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "adddbf49-2055-49fc-b02f-b8108ed12565",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 713
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bd5c7f08-4dc8-4cca-810e-c5d574bcdd11",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "adddbf49-2055-49fc-b02f-b8108ed12565",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0f75c225-617d-48d7-9cc4-dc18a2764259",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 715
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "subject body"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def subject_body(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('subject_body() called')\n    \n    template = \"\"\"Failed actions for playbook: {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"get_parent_playbook_data:action_result.data.*.response_body._pretty_playbook\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"subject_body\")\n\n    playbook_check(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get app run data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "subject body",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bce36495-c207-4a33-9d81-95f6d60c1ec6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 235,
                        "line_end": 202,
                        "line_start": 186,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "create email subject body",
                        "number": 5,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_parent_playbook_data:action_result.data.*.response_body._pretty_playbook"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1740,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "subject_body",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Failed actions for playbook: {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 728
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "724e465e-5d98-45db-955d-aa5737ef74fa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "adddbf49-2055-49fc-b02f-b8108ed12565",
                            "port": "out-3",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0f75c225-617d-48d7-9cc4-dc18a2764259",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 731
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 7
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def action_block(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('action_block() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_app_run_data:action_result.data.*.response_body.data.*.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        join_playbook_email_body(action=action, success=success, container=container, results=results, handle=handle)\n        return\n\n    # check for 'elif' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_playbook_action_runs:action_result.data.*.response_body.data.*.status\", \"==\", \"success\"],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched_artifacts_2 or matched_results_2:\n        return\n\n    # call connected blocks for 'else' condition 3\n    join_playbook_email_body(action=action, success=success, container=container, results=results, handle=handle)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get app run data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "action block",
                        "description": "Checks for action block success",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "adddbf49-2055-49fc-b02f-b8108ed12565",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 372,
                        "line_end": 405,
                        "line_start": 372,
                        "name": "decision",
                        "notes": "Checks for action block success\n\nGREEN: Found no failed statuses -> exit\nPURPLE: Found success statuses -> exit\nAMBERL: Found some failure -> collect email body and send email",
                        "number": 7,
                        "order": 14,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "get_app_run_data:action_result.data.*.response_body.data.*.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "get_playbook_action_runs:action_result.data.*.response_body.data.*.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1200,
                            "y": 340
                        },
                        "previous_function": "",
                        "previous_name": "action_block",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 759
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "playbook run data url"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def playbook_run_data_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('playbook_run_data_url() called')\n    \n    template = \"\"\"playbook_run/{0}/?pretty\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"get_playbook_id:custom_function:parent_pb_run_id\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"playbook_run_data_url\")\n\n    get_parent_playbook_data(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "playbook run data url",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "06ff2365-b3cf-4d72-ba9e-278b4992f60b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 212,
                        "line_end": 156,
                        "line_start": 140,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Creates playbook run data url",
                        "number": 4,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_playbook_id:custom_function:parent_pb_run_id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "playbook_run_data_url",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "playbook_run/{0}/?pretty",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 762
                    },
                    {
                        "action": "get data",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "headers": "",
                            "location": "playbook_run_data_url:formatted_data",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "2.1.15",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "phantom_rest",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "headers": "",
                                    "location": "playbook_run_data_url:formatted_data",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 180,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom_rest",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            "false"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 2,
                                        "required": false
                                    },
                                    "location": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint?query=string)",
                                        "key": "location",
                                        "order": 0,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 1,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "180",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get parent playbook data"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_parent_playbook_data(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('get_parent_playbook_data() called')\n\n    # collect data for 'get_parent_playbook_data' call\n    formatted_data_1 = phantom.get_format_data(name='playbook_run_data_url')\n\n    parameters = []\n    \n    # build parameters list for 'get_parent_playbook_data' call\n    parameters.append({\n        'headers': \"\",\n        'location': formatted_data_1,\n        'verify_certificate': False,\n    })\n\n    phantom.act(\"get data\", parameters=parameters, assets=['phantom_rest'], callback=playbook_message_format, name=\"get_parent_playbook_data\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get parent playbook data",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "59db32e1-2976-42c0-a9b6-924174538426",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 140,
                        "line_start": 121,
                        "message": "Configuring now",
                        "name": "get data",
                        "notes": "gets parent playbook run data via the parent_playbook_run_id",
                        "number": 3,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1240,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "get_parent_playbook_data",
                        "required_params": {
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 763
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "playbook message form..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def playbook_message_format(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('playbook_message_format() called')\n    results_data_1 = phantom.collect2(container=container, datapath=['get_parent_playbook_data:action_result.data.*.response_body.message'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    playbook_message_format__message = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    # get playbook error message data     \n    playbook_message_format__message = json.loads(results_item_1_0[0])['message']   \n    #phantom.debug('Playbook error message: {}'.format(playbook_message_format__message))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='playbook_message_format:message', value=json.dumps(playbook_message_format__message))\n    playbook_action_run_url(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get parent playbook data",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def playbook_message_format(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('playbook_message_format() called')\n    results_data_1 = phantom.collect2(container=container, datapath=['get_parent_playbook_data:action_result.data.*.response_body.message'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    playbook_message_format__message = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    # get playbook error message data     \n    playbook_message_format__message = json.loads(results_item_1_0[0])['message']   \n    #phantom.debug('Playbook error message: {}'.format(playbook_message_format__message))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='playbook_message_format:message', value=json.dumps(playbook_message_format__message))\n    join_playbook_action_run_url(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "playbook message format",
                        "description": "Format and displays the playbook error message format",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "29821b32-71dc-4019-a3d0-c0924dfa010b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 369,
                        "line_start": 346,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Format and displays the playbook error message format",
                        "number": 3,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "message"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_parent_playbook_data:action_result.data.*.response_body.message"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "playbook_message_format",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "    # get playbook error message data     \n    playbook_message_format__message = json.loads(results_item_1_0[0])['message']   \n    #phantom.debug('Playbook error message: {}'.format(playbook_message_format__message))\n",
                        "warn": false,
                        "z": 764
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "playbook action run url"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def playbook_action_run_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('playbook_action_run_url() called')\n    \n    template = \"\"\"action_run?_filter_playbook_run={0}&page_size=0\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"get_playbook_id:custom_function:parent_pb_run_id\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"playbook_action_run_url\")\n\n    get_playbook_action_runs(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get parent playbook data",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "playbook action run url",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "de0dee11-37bd-4cdf-8a86-e578e792cf04",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 54,
                        "line_end": 54,
                        "line_start": 38,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Create playbook action run data to get action results",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_playbook_id:custom_function:parent_pb_run_id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1720,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "playbook_action_run_url",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "action_run?_filter_playbook_run={0}&page_size=0",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 765
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "013bc17b-fe73-4cc4-8ff8-01610c4acce5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "53ca3cb0-45a7-475f-a572-0202adfdef90",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b270f194-0c85-4746-8c46-fdbc0832c033",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 768
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d4f2d01e-6a2e-452d-a60f-ec11e0ccd579",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b270f194-0c85-4746-8c46-fdbc0832c033",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bc330465-7eaf-4baf-acd6-4a5e81bfda24",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 774
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3df34356-be51-4a56-adb9-06e9b00740c0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "53ca3cb0-45a7-475f-a572-0202adfdef90",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0f75c225-617d-48d7-9cc4-dc18a2764259",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 777
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def check_action_runs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('check_action_runs() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_playbook_action_runs:action_result.data.*.response_body.count\", \">\", 0],\n            [\"get_parent_playbook_data:action_result.data.*.response_body.status\", \"!=\", \"success\"],\n        ],\n        logical_operator='or')\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        action_block_app_runs_url(action=action, success=success, container=container, results=results, handle=handle)\n        return\n\n    # call connected blocks for 'else' condition 2\n    join_playbook_email_body(action=action, success=success, container=container, results=results, handle=handle)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get playbook action runs",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "check action runs",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "53ca3cb0-45a7-475f-a572-0202adfdef90",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 343,
                        "line_start": 320,
                        "name": "decision",
                        "notes": "checks for action runs\n\nGREEN: actions exist\nPURPLE: missing actions",
                        "number": 3,
                        "order": 12,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "get_playbook_action_runs:action_result.data.*.response_body.count",
                                        "value": "0"
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "get_parent_playbook_data:action_result.data.*.response_body.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "check_action_runs",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 778
                    },
                    {
                        "action": "get data",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "headers": "",
                            "location": "action_block_app_runs_url:formatted_data.*",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "2.1.15",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "phantom_rest",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "headers": "",
                                    "location": "action_block_app_runs_url:formatted_data.*",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 180,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom_rest",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            "false"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 2,
                                        "required": false
                                    },
                                    "location": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint?query=string)",
                                        "key": "location",
                                        "order": 0,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 1,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "180",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get app run data"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_app_run_data(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('get_app_run_data() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'get_app_run_data' call\n    formatted_data_1 = phantom.get_format_data(name='action_block_app_runs_url__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'get_app_run_data' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'headers': \"\",\n            'location': formatted_part_1,\n            'verify_certificate': False,\n        })\n\n    phantom.act(\"get data\", parameters=parameters, assets=['phantom_rest'], callback=subject_body, name=\"get_app_run_data\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get playbook action runs",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get app run data",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bc330465-7eaf-4baf-acd6-4a5e81bfda24",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 136,
                        "line_end": 121,
                        "line_start": 99,
                        "message": "Configuring now",
                        "name": "get data",
                        "notes": "Gets app run data from parent playbook using the action_run id and app_run api call",
                        "number": 2,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "get_app_run_data",
                        "required_params": {
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 787
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "action block app runs url"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def action_block_app_runs_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('action_block_app_runs_url() called')\n    \n    template = \"\"\"%%\naction_run/{0}/app_runs\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"get_playbook_action_runs:action_result.data.*.response_body.data.*.id\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"action_block_app_runs_url\")\n\n    get_app_run_data(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get playbook action runs",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "action block app runs url",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b270f194-0c85-4746-8c46-fdbc0832c033",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 447,
                        "line_start": 429,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Builds action_run/{action_run_id}/app_runs url for passing to the REST API",
                        "number": 6,
                        "order": 16,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_playbook_action_runs:action_result.data.*.response_body.data.*.id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1240,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "action_block_app_runs_url",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\naction_run/{0}/app_runs\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 796
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "playbook email body"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_error.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def playbook_email_body(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('playbook_email_body() called')\n    playbook_message_format__message = json.loads(phantom.get_run_data(key='playbook_message_format:message'))\n    url_value = container.get('url', None)\n    results_data_1 = phantom.collect2(container=container, datapath=['get_parent_playbook_data:action_result.data.*.response_body.id', 'get_parent_playbook_data:action_result.data.*.response_body._pretty_playbook', 'get_parent_playbook_data:action_result.data.*.response_body.status'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['get_playbook_action_runs:action_result.data.*.response_body.data.*.id', 'get_playbook_action_runs:action_result.data.*.response_body.data.*.name', 'get_playbook_action_runs:action_result.data.*.response_body.data.*.action', 'get_playbook_action_runs:action_result.data.*.response_body.data.*.status', 'get_playbook_action_runs:action_result.data.*.response_body.data.*.message'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['get_app_run_data:action_result.data.*.response_body.data.*.action_run', 'get_app_run_data:action_result.data.*.response_body.data.*.app_name', 'get_app_run_data:action_result.data.*.response_body.data.*.action', 'get_app_run_data:action_result.data.*.response_body.data.*.status', 'get_app_run_data:action_result.data.*.response_body.data.*.result_data.*.message'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_2_1 = [item[1] for item in results_data_2]\n    results_item_2_2 = [item[2] for item in results_data_2]\n    results_item_2_3 = [item[3] for item in results_data_2]\n    results_item_2_4 = [item[4] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n    results_item_3_1 = [item[1] for item in results_data_3]\n    results_item_3_2 = [item[2] for item in results_data_3]\n    results_item_3_3 = [item[3] for item in results_data_3]\n    results_item_3_4 = [item[4] for item in results_data_3]\n\n    playbook_email_body__body_format = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    #phantom.debug('Display Data:')\n    #phantom.debug(results_data_2)\n    phantom.debug(results_data_3[0][0])\n    #phantom.debug(playbook_message_format__message)\n    #phantom.debug('End Display Data:')\n    \n    # Format email body\n    # Sets default playbook message if failed but no value returned\n    if not playbook_message_format__message:\n        playbook_message_format__message = \"<strong><span style='color: #ff0000;'> Critical Playbook ERROR Review Playbook Debug Log </span></strong>\"\n    \n    color = \"#000000\" \n    \n    # Sets the color to red from default black if the status failed\n    if results_item_1_2[0] == 'failed': \n        color = \"#ff0000\"\n    html_template = \"<html><head><body>\"\n    html_template += \"<h2>splunk <span style='color: #808080;'>&gt;phantom </span> is reporting a Playbook or Action Failure! </h2>\"\n    html_template += \"<hr />\"\n    html_template += \"<div><h3><span style='color: #ff0000;'> Error Report for Playbook: </span><strong> {0} </strong></h3></div>\".format(results_item_1_1[0])\n    html_template += \"<ul><li>Reported from: {}</li>\".format(url_value)\n    html_template += \"<li> Reported Playbook status: <strong><span style='color: {0};font-weight:bold'> {1} </span></strong></li>\".format(color,results_item_1_2[0])\n    html_template += \"<li> Playbook Run Id: <strong> {0} </strong></li></ul>\".format(results_item_1_0[0])\n    html_template += \"<p><span style='color: {0};font-weight:bold'> Message: {1} </span></p>\".format(color,playbook_message_format__message)\n    html_template += \"<hr />\"    # Playbook runs separaters \n    \n    # Format list of action_run?_filter_playbook_run={0}&page_size=0 items \n    error_size = 0\n    \n    for results_item_2 in results_data_2:\n        color = \"#000000\" \n        if results_item_2[0]: # Provides a limit for SMTP body messages\n            # Sets the color to red from default black if the status failed\n            if results_item_2[3] == 'failed': \n                color = \"#ff0000\"\n            html_template += \"<p><strong> Action Block </strong><br /></p>\"\n            html_template += \"<p>Name: {0} | Action: {1} <br />\".format(results_item_2[1],results_item_2[2])\n            html_template += \"Status: <span style='color: {0};font-weight:bold'> {1} </span><br />\".format(color,results_item_2[3])\n            html_template += \"Status Message: {0} <br /></span></p>\".format(results_item_2[4])\n        \n            # Format list of action_run/{id}/app_runs REST endpoint\n            html_template += \"<p><strong> Application Runs: </strong></p>\"\n            for results_item_3 in results_data_3:\n                if results_item_2[0] == results_item_3[0]:\n                    color = \"#000000\"\n                    # Sets the color to red from default black if the status failed\n                    if results_item_3[3] == 'failed':\n                        color = \"#ff0000\"\n                    \n                    html_template += \"<ul><p>App Name: {0} | Action: {1} <br />\".format(results_item_3[1],results_item_3[2])\n                    html_template += \"Status: <span style='color: {0};font-weight:bold'> {1} </span><br />\".format(color,results_item_3[3])\n                    html_template += \"Status Message: {0} <br /></p></ul>\".format(results_item_3[4])\n                    \n                elif not results_data_3[0]: # Checks to see if no applictions runs were completed\n                    html_template +=  \"<strong><span style='color: #ff0000;font-weight:bold'> No application runs were executed </span><br />\"\n        \n        elif not results_item_2[0]: # Checks to see if no actions were executed\n            html_template +=  \"<span style='color: #ff0000;font-weight:bold'> No actions were executed </span><br />\"\n\n    html_template += \"<hr />\"   # Application runs separaters \n    \n    # Footer Insertion\n    html_template += \"<p style='text-align: right;'><strong> Sent by splunk</strong><span style='color: #808080;'>&gt;phantom </span></p></body></html>\"\n    \n    # Debug the email body\n    playbook_email_body__body_format = html_template\n    \n    #phantom.debug(html_template)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='playbook_email_body:body_format', value=json.dumps(playbook_email_body__body_format))\n    send_failed_playbook_email(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get app run data, get app run data, get playbook action runs",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 26,
                        "custom_callback": "",
                        "custom_code": "def playbook_email_body(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('playbook_email_body() called')\n    playbook_message_format__message = json.loads(phantom.get_run_data(key='playbook_message_format:message'))\n    url_value = container.get('url', None)\n    results_data_1 = phantom.collect2(container=container, datapath=['get_parent_playbook_data:action_result.data.*.response_body.id', 'get_parent_playbook_data:action_result.data.*.response_body._pretty_playbook', 'get_parent_playbook_data:action_result.data.*.response_body.status'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['get_playbook_action_runs:action_result.data.*.response_body.data.*.id', 'get_playbook_action_runs:action_result.data.*.response_body.data.*.name', 'get_playbook_action_runs:action_result.data.*.response_body.data.*.action', 'get_playbook_action_runs:action_result.data.*.response_body.data.*.status', 'get_playbook_action_runs:action_result.data.*.response_body.data.*.message'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['get_app_run_data:action_result.data.*.response_body.data.*.action_run', 'get_app_run_data:action_result.data.*.response_body.data.*.app_name', 'get_app_run_data:action_result.data.*.response_body.data.*.action', 'get_app_run_data:action_result.data.*.response_body.data.*.status', 'get_app_run_data:action_result.data.*.response_body.data.*.result_data.*.message'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_2_1 = [item[1] for item in results_data_2]\n    results_item_2_2 = [item[2] for item in results_data_2]\n    results_item_2_3 = [item[3] for item in results_data_2]\n    results_item_2_4 = [item[4] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n    results_item_3_1 = [item[1] for item in results_data_3]\n    results_item_3_2 = [item[2] for item in results_data_3]\n    results_item_3_3 = [item[3] for item in results_data_3]\n    results_item_3_4 = [item[4] for item in results_data_3]\n\n    playbook_email_body__body_format = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    #phantom.debug('Display Data:')\n    #phantom.debug(results_data_2)\n    phantom.debug(results_data_3[0][0])\n    #phantom.debug(playbook_message_format__message)\n    #phantom.debug('End Display Data:')\n    \n    # Format email body\n    # Sets default playbook message if failed but no value returned\n    if not playbook_message_format__message:\n        playbook_message_format__message = \"<strong><span style='color: #ff0000;'> Critical Playbook ERROR Review Playbook Debug Log </span></strong>\"\n    \n    color = \"#000000\" \n    \n    # Sets the color to red from default black if the status failed\n    if results_item_1_2[0] == 'failed': \n        color = \"#ff0000\"\n    html_template = \"<html><head><body>\"\n    html_template += \"<h2>splunk <span style='color: #808080;'>&gt;phantom </span> is reporting a Playbook or Action Failure! </h2>\"\n    html_template += \"<hr />\"\n    html_template += \"<div><h3><span style='color: #ff0000;'> Error Report for Playbook: </span><strong> {0} </strong></h3></div>\".format(results_item_1_1[0])\n    html_template += \"<ul><li>Reported from: {}</li>\".format(url_value)\n    html_template += \"<li> Reported Playbook status: <strong><span style='color: {0};font-weight:bold'> {1} </span></strong></li>\".format(color,results_item_1_2[0])\n    html_template += \"<li> Playbook Run Id: <strong> {0} </strong></li></ul>\".format(results_item_1_0[0])\n    html_template += \"<p><span style='color: {0};font-weight:bold'> Message: {1} </span></p>\".format(color,playbook_message_format__message)\n    html_template += \"<hr />\"    # Playbook runs separaters \n    \n    # Format list of action_run?_filter_playbook_run={0}&page_size=0 items \n    error_size = 0\n    \n    for results_item_2 in results_data_2:\n        color = \"#000000\" \n        if results_item_2[0]: # Provides a limit for SMTP body messages\n            # Sets the color to red from default black if the status failed\n            if results_item_2[3] == 'failed': \n                color = \"#ff0000\"\n            html_template += \"<p><strong> Action Block </strong><br /></p>\"\n            html_template += \"<p>Name: {0} | Action: {1} <br />\".format(results_item_2[1],results_item_2[2])\n            html_template += \"Status: <span style='color: {0};font-weight:bold'> {1} </span><br />\".format(color,results_item_2[3])\n            html_template += \"Status Message: {0} <br /></span></p>\".format(results_item_2[4])\n        \n            # Format list of action_run/{id}/app_runs REST endpoint\n            html_template += \"<p><strong> Application Runs: </strong></p>\"\n            for results_item_3 in results_data_3:\n                if results_item_2[0] == results_item_3[0]:\n                    color = \"#000000\"\n                    # Sets the color to red from default black if the status failed\n                    if results_item_3[3] == 'failed':\n                        color = \"#ff0000\"\n                    \n                    html_template += \"<ul><p>App Name: {0} | Action: {1} <br />\".format(results_item_3[1],results_item_3[2])\n                    html_template += \"Status: <span style='color: {0};font-weight:bold'> {1} </span><br />\".format(color,results_item_3[3])\n                    html_template += \"Status Message: {0} <br /></p></ul>\".format(results_item_3[4])\n                    \n                elif not results_data_3[0]: # Checks to see if no applictions runs were completed\n                    html_template +=  \"<strong><span style='color: #ff0000;font-weight:bold'> No application runs were executed </span><br />\"\n        \n        elif not results_item_2[0]: # Checks to see if no actions were executed\n            html_template +=  \"<span style='color: #ff0000;font-weight:bold'> No actions were executed </span><br />\"\n\n    html_template += \"<hr />\"   # Application runs separaters \n    \n    # Footer Insertion\n    html_template += \"<p style='text-align: right;'><strong> Sent by splunk</strong><span style='color: #808080;'>&gt;phantom </span></p></body></html>\"\n    \n    # Debug the email body\n    playbook_email_body__body_format = html_template\n    \n    #phantom.debug(html_template)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='playbook_email_body:body_format', value=json.dumps(playbook_email_body__body_format))\n    send_failed_playbook_email(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "playbook email body",
                        "description": "Creates email body format of failed parent playbook actions",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0f75c225-617d-48d7-9cc4-dc18a2764259",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_playbook_email_body(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('join_playbook_email_body() called')\n\n    # check if all connected incoming actions are done i.e. have succeeded or failed\n    if phantom.actions_done([ 'get_app_run_data', 'get_playbook_action_runs' ]):\n        \n        # call connected block \"playbook_email_body\"\n        playbook_email_body(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 309,
                        "line_end": 320,
                        "line_start": 205,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Creates body format of failed parent playbook actions regarding failed playbook and it's actions",
                        "number": 2,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "body_format"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_parent_playbook_data:action_result.data.*.response_body.id"
                            },
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_parent_playbook_data:action_result.data.*.response_body._pretty_playbook"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_parent_playbook_data:action_result.data.*.response_body.status"
                            },
                            {
                                "position": 0,
                                "type": "",
                                "value": "playbook_message_format:custom_function:message"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "get_playbook_action_runs:action_result.data.*.response_body.data.*.id"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "get_playbook_action_runs:action_result.data.*.response_body.data.*.name"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "get_playbook_action_runs:action_result.data.*.response_body.data.*.action"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "get_playbook_action_runs:action_result.data.*.response_body.data.*.status"
                            },
                            {
                                "position": 7,
                                "type": "",
                                "value": "get_playbook_action_runs:action_result.data.*.response_body.data.*.message"
                            },
                            {
                                "position": 9,
                                "type": "",
                                "value": "get_app_run_data:action_result.data.*.response_body.data.*.action_run"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_app_run_data:action_result.data.*.response_body.data.*.app_name"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "get_app_run_data:action_result.data.*.response_body.data.*.action"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "get_app_run_data:action_result.data.*.response_body.data.*.status"
                            },
                            {
                                "position": 7,
                                "type": "",
                                "value": "get_app_run_data:action_result.data.*.response_body.data.*.result_data.*.message"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "container:url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 420
                        },
                        "previous_function": "",
                        "previous_name": "playbook_email_body",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "    #phantom.debug('Display Data:')\n    #phantom.debug(results_data_2)\n    phantom.debug(results_data_3[0][0])\n    #phantom.debug(playbook_message_format__message)\n    #phantom.debug('End Display Data:')\n    \n    # Format email body\n    # Sets default playbook message if failed but no value returned\n    if not playbook_message_format__message:\n        playbook_message_format__message = \"<strong><span style='color: #ff0000;'> Critical Playbook ERROR Review Playbook Debug Log </span></strong>\"\n    \n    color = \"#000000\" \n    \n    # Sets the color to red from default black if the status failed\n    if results_item_1_2[0] == 'failed': \n        color = \"#ff0000\"\n    html_template = \"<html><head><body>\"\n    html_template += \"<h2>splunk <span style='color: #808080;'>&gt;phantom </span> is reporting a Playbook or Action Failure! </h2>\"\n    html_template += \"<hr />\"\n    html_template += \"<div><h3><span style='color: #ff0000;'> Error Report for Playbook: </span><strong> {0} </strong></h3></div>\".format(results_item_1_1[0])\n    html_template += \"<ul><li>Reported from: {}</li>\".format(url_value)\n    html_template += \"<li> Reported Playbook status: <strong><span style='color: {0};font-weight:bold'> {1} </span></strong></li>\".format(color,results_item_1_2[0])\n    html_template += \"<li> Playbook Run Id: <strong> {0} </strong></li></ul>\".format(results_item_1_0[0])\n    html_template += \"<p><span style='color: {0};font-weight:bold'> Message: {1} </span></p>\".format(color,playbook_message_format__message)\n    html_template += \"<hr />\"    # Playbook runs separaters \n    \n    # Format list of action_run?_filter_playbook_run={0}&page_size=0 items \n    error_size = 0\n    \n    for results_item_2 in results_data_2:\n        color = \"#000000\" \n        if results_item_2[0]: # Provides a limit for SMTP body messages\n            # Sets the color to red from default black if the status failed\n            if results_item_2[3] == 'failed': \n                color = \"#ff0000\"\n            html_template += \"<p><strong> Action Block </strong><br /></p>\"\n            html_template += \"<p>Name: {0} | Action: {1} <br />\".format(results_item_2[1],results_item_2[2])\n            html_template += \"Status: <span style='color: {0};font-weight:bold'> {1} </span><br />\".format(color,results_item_2[3])\n            html_template += \"Status Message: {0} <br /></span></p>\".format(results_item_2[4])\n        \n            # Format list of action_run/{id}/app_runs REST endpoint\n            html_template += \"<p><strong> Application Runs: </strong></p>\"\n            for results_item_3 in results_data_3:\n                if results_item_2[0] == results_item_3[0]:\n                    color = \"#000000\"\n                    # Sets the color to red from default black if the status failed\n                    if results_item_3[3] == 'failed':\n                        color = \"#ff0000\"\n                    \n                    html_template += \"<ul><p>App Name: {0} | Action: {1} <br />\".format(results_item_3[1],results_item_3[2])\n                    html_template += \"Status: <span style='color: {0};font-weight:bold'> {1} </span><br />\".format(color,results_item_3[3])\n                    html_template += \"Status Message: {0} <br /></p></ul>\".format(results_item_3[4])\n                    \n                elif not results_data_3[0]: # Checks to see if no applictions runs were completed\n                    html_template +=  \"<strong><span style='color: #ff0000;font-weight:bold'> No application runs were executed </span><br />\"\n        \n        elif not results_item_2[0]: # Checks to see if no actions were executed\n            html_template +=  \"<span style='color: #ff0000;font-weight:bold'> No actions were executed </span><br />\"\n\n    html_template += \"<hr />\"   # Application runs separaters \n    \n    # Footer Insertion\n    html_template += \"<p style='text-align: right;'><strong> Sent by splunk</strong><span style='color: #808080;'>&gt;phantom </span></p></body></html>\"\n    \n    # Debug the email body\n    playbook_email_body__body_format = html_template\n    \n    #phantom.debug(html_template)\n",
                        "warn": false,
                        "z": 859
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "get playbook id"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_error.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def get_playbook_id(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('get_playbook_id() called')\n    input_parameter_0 = \"\"\n\n    get_playbook_id__parent_pb_run_id = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    get_playbook_id__parent_pb_run_id = int(phantom.get_playbook_info()[0]['parent_playbook_run_id'])\n    phantom.debug('parent_playbook_id: {}'.format(get_playbook_id__parent_pb_run_id))\n    \n    # Used for Testing\n    # get_playbook_id__parent_pb_run_id = 2479\n    # phantom.debug('Testing parent_playbook_id: {}'.format(get_playbook_id__parent_pb_run_id))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='get_playbook_id:parent_pb_run_id', value=json.dumps(get_playbook_id__parent_pb_run_id))\n    check_parent_playbook_id(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 9,
                        "custom_callback": "",
                        "custom_code": "def get_playbook_id(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('get_playbook_id() called')\n    input_parameter_0 = \"\"\n\n    get_playbook_id__parent_pb_run_id = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    get_playbook_id__parent_pb_run_id = int(phantom.get_playbook_info()[0]['parent_playbook_run_id'])\n    phantom.debug('parent_playbook_id: {}'.format(get_playbook_id__parent_pb_run_id))\n    \n    # Used for Testing\n    # get_playbook_id__parent_pb_run_id = 2479\n    # phantom.debug('Testing parent_playbook_id: {}'.format(get_playbook_id__parent_pb_run_id))\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='get_playbook_id:parent_pb_run_id', value=json.dumps(get_playbook_id__parent_pb_run_id))\n    check_parent_playbook_id(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "get playbook id",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3d4a09ac-363e-4d00-b379-188ab6728bd9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 80,
                        "line_start": 54,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Get parent playbook run id and playbook id",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "parent_pb_run_id"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "get_playbook_id",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    get_playbook_id__parent_pb_run_id = int(phantom.get_playbook_info()[0]['parent_playbook_run_id'])\n    phantom.debug('parent_playbook_id: {}'.format(get_playbook_id__parent_pb_run_id))\n    \n    # Used for Testing\n    # get_playbook_id__parent_pb_run_id = 2479\n    # phantom.debug('Testing parent_playbook_id: {}'.format(get_playbook_id__parent_pb_run_id))\n",
                        "warn": false,
                        "z": 865
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "",
                            "bcc": "",
                            "body": "playbook_email_body:custom_function:body_format",
                            "cc": "",
                            "from": "phantom@phantom.us",
                            "headers": "",
                            "subject": "subject_body:formatted_data",
                            "to": "phantom@phantom.us"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "send email",
                                "actions": [
                                    "test connectivity",
                                    "send email"
                                ],
                                "active": true,
                                "app_name": "SMTP",
                                "app_version": "1.2.49",
                                "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                                "asset_name": "smtp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attachments": "",
                                    "bcc": "",
                                    "body": "playbook_email_body:custom_function:body_format",
                                    "cc": "",
                                    "from": "phantom@phantom.us",
                                    "headers": "",
                                    "subject": "subject_body:formatted_data",
                                    "to": "phantom@phantom.us"
                                },
                                "has_app": true,
                                "id": 132,
                                "loaded": false,
                                "missing": false,
                                "name": "smtp",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.bcc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.cc",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 1,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "attachments": {
                                        "allow_list": true,
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault IDs of files to attach",
                                        "key": "attachments",
                                        "order": 6,
                                        "required": false,
                                        "verbose": "Each file that is required to be attached, needs to be in the vault. Multiple file vault ids can be specified as comma separated."
                                    },
                                    "bcc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on bcc line",
                                        "key": "bcc",
                                        "order": 3,
                                        "required": false
                                    },
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message body",
                                        "key": "body",
                                        "order": 5,
                                        "required": true
                                    },
                                    "cc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on cc line",
                                        "key": "cc",
                                        "order": 2,
                                        "required": false
                                    },
                                    "from": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "From field",
                                        "key": "from",
                                        "order": 0,
                                        "required": false
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Custom email headers (formatted as JSON)",
                                        "key": "headers",
                                        "order": 7,
                                        "required": false
                                    },
                                    "subject": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message Subject",
                                        "key": "subject",
                                        "order": 4,
                                        "required": false
                                    },
                                    "to": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses",
                                        "key": "to",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "SMTP",
                                "product_vendor": "Generic",
                                "targets": "132",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "send failed playbook em..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def send_failed_playbook_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('send_failed_playbook_email() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    playbook_email_body__body_format = json.loads(phantom.get_run_data(key='playbook_email_body:body_format'))\n    # collect data for 'send_failed_playbook_email' call\n    formatted_data_1 = phantom.get_format_data(name='subject_body')\n\n    parameters = []\n    \n    # build parameters list for 'send_failed_playbook_email' call\n    parameters.append({\n        'body': playbook_email_body__body_format,\n        'from': \"phantom@phantom.us\",\n        'attachments': \"\",\n        'to': \"phantom@phantom.us\",\n        'cc': \"\",\n        'bcc': \"\",\n        'headers': \"\",\n        'subject': formatted_data_1,\n    })\n\n    phantom.act(\"send email\", parameters=parameters, assets=['smtp'], name=\"send_failed_playbook_email\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get app run data, get app run data, get playbook action runs",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "send failed playbook email",
                        "delay": 0,
                        "description": "Sends Failure email to customer for troubleshooting",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3830e228-4ab4-4051-b6f7-5c30f199e71a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 235,
                        "line_end": 186,
                        "line_start": 159,
                        "message": "Configuring now",
                        "name": "send email",
                        "notes": "Sends Failure email to customer for troubleshooting",
                        "number": 1,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1740,
                            "y": 420
                        },
                        "previous_function": "",
                        "previous_name": "send_failed_playbook_email",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 866
                    }
                ]
            },
            "notes": "INPUT: Run at the end of Parent Playbook and provides a parent playbook id != 0\nINTERACTIONS: Phantom REST, SMTP\nACTIONS: get data, format data, decide data, send email\nARTIFACTS:\nP1: Send an email if you find actions that failed\nP2: If all were successful just exit with no comments"
        },
        "python_version": "2.7",
        "schema": 3,
        "version": "4.2.7532"
    },
    "create_time": "2021-02-04T18:27:14.282902+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}