{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_4",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_1",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "b43f0422805d8d289beb12b1711fdf7cb7666741",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 1000,
                    "y": 419.99999999999955
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 1000,
                    "y": 1020
                },
                "4": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "refreshNotableData": true
                        },
                        "functionId": 2,
                        "functionName": "set_severity_2",
                        "id": "4",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "set_severity": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableSeverity",
                                        "description": "",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Select severity",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    }
                                ],
                                "label": "set severity",
                                "name": "set_severity",
                                "refreshNotableData": true
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "set_severity": {
                                "_internal": [
                                    "container"
                                ],
                                "severity": "high"
                            }
                        }
                    },
                    "errors": {},
                    "id": "4",
                    "type": "utility",
                    "x": 990,
                    "y": 604.5
                },
                "5": {
                    "data": {
                        "action": "send email",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "SMTP",
                        "connectorConfigs": [
                            "myemailserver"
                        ],
                        "connectorId": 142,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "send_email_1",
                        "id": "5",
                        "parameters": {
                            "body": "playbook_input:mylistofips",
                            "to": "playbook_input:someemailaddr"
                        },
                        "requiredParameters": [
                            "to",
                            "body"
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "action",
                    "x": 1000,
                    "y": 700
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "approver": "admin",
                        "functionId": 1,
                        "functionName": "prompt_1",
                        "id": "6",
                        "message": "Here's the email: {0}\nand here's the list:\n{1}",
                        "parameters": [
                            "playbook_input:someemailaddr",
                            "playbook_input:mylistofips"
                        ],
                        "responseTime": 30,
                        "responses": [
                            {
                                "responsePrompt": "What do you think?",
                                "responseType": "message"
                            },
                            {
                                "responsePrompt": "Please type in an IP",
                                "responseType": "message"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "prompt",
                    "x": 1060,
                    "y": 820
                }
            },
            "notes": ""
        },
        "input_spec": [
            {
                "contains": [
                    "ip"
                ],
                "description": "map an ip address list  here",
                "name": "myListOfIPs"
            },
            {
                "contains": [],
                "description": "",
                "name": "someEmailAddr"
            },
            {
                "contains": [],
                "description": "",
                "name": ""
            }
        ],
        "output_spec": [
            {
                "contains": [],
                "datapaths": [
                    "prompt_1:action_result.summary.responses.0"
                ],
                "deduplicate": false,
                "description": "",
                "metadata": {},
                "name": "thoughtsFromChildPBAnalyst"
            },
            {
                "contains": [
                    "ip"
                ],
                "datapaths": [
                    "prompt_1:action_result.summary.responses.1"
                ],
                "deduplicate": false,
                "description": "this should be an IP",
                "metadata": {},
                "name": "anIP"
            }
        ],
        "playbook_type": "data",
        "python_version": "3",
        "schema": "5.0.3",
        "version": "5.0.1.66250"
    },
    "create_time": "2022-04-01T15:11:03.559308+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}