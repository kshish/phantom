{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "",
            "hash": "900d2414cb505d63806e722648c36fef6ad6285f",
            "joint": {
                "cells": [
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7f15c157-98c0-4b42-a222-159146458353",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 117,
                        "line_start": 104,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 5,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1180,
                            "y": 140
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cd27d8cf-d76d-4cf6-8f4f-9644bce451bd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "38d8b749-6531-4b7c-9087-95d1e69765aa",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3eda6ef1-ee72-46cd-8523-2a5f7f013dcc",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 7
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'cf_community_list_merge_1' block\n    cf_community_list_merge_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a89b1eef-873c-4d82-9feb-8a85fb1e77b2",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 15,
                        "line_start": 7,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 40,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 14
                    },
                    {
                        "action": "add artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "cef_dictionary": "",
                            "cef_name": "mySomeKindOfField",
                            "cef_value": "geolocate_ip_1:action_result.data.*.country_name",
                            "container_id": "",
                            "contains": "",
                            "label": "event",
                            "name": "geolocate_ip_1:action_result.parameter.ip",
                            "run_automation": true,
                            "source_data_identifier": "chris"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.0.2",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "mylocal",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "cef_dictionary": "",
                                    "cef_name": "mySomeKindOfField",
                                    "cef_value": "geolocate_ip_1:action_result.data.*.country_name",
                                    "container_id": "",
                                    "contains": "",
                                    "label": "event",
                                    "name": "geolocate_ip_1:action_result.parameter.ip",
                                    "run_automation": true,
                                    "source_data_identifier": "chris"
                                },
                                "has_app": true,
                                "id": 9,
                                "loaded": false,
                                "missing": false,
                                "name": "mylocal",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_dictionary",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"test_key\": \"test_value\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "*"
                                        ],
                                        "data_path": "action_result.parameter.cef_value",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1234
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.contains",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "event"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact_demo"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.run_automation",
                                        "data_type": "string",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_data_identifier",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.existing_artifact_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.failed",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            123
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.artifact_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            12345
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.container_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1234
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.summary.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://10.1.1.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact id: 12345, Container id: 1234, Server: https://10.1.1.10"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "cef_dictionary": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "CEF JSON",
                                        "key": "cef_dictionary",
                                        "order": 6,
                                        "required": false
                                    },
                                    "cef_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "CEF Name",
                                        "key": "cef_name",
                                        "order": 4,
                                        "required": false,
                                        "value_list": [
                                            "act",
                                            "app",
                                            "applicationProtocol",
                                            "baseEventCount",
                                            "bytesIn",
                                            "bytesOut",
                                            "cat",
                                            "cn1",
                                            "cn1Label",
                                            "cn2",
                                            "cn2Label",
                                            "cn3",
                                            "cn3Label",
                                            "cnt",
                                            "cs1",
                                            "cs1Label",
                                            "cs2",
                                            "cs2Label",
                                            "cs3",
                                            "cs3Label",
                                            "cs4",
                                            "cs4Label",
                                            "cs5",
                                            "cs5Label",
                                            "cs6",
                                            "cs6Label",
                                            "destinationAddress",
                                            "destinationDnsDomain",
                                            "destinationHostName",
                                            "destinationMacAddress",
                                            "destinationNtDomain",
                                            "destinationPort",
                                            "destinationProcessName",
                                            "destinationServiceName",
                                            "destinationTranslatedAddress",
                                            "destinationTranslatedPort",
                                            "destinationUserId",
                                            "destinationUserName",
                                            "destinationUserPrivileges",
                                            "deviceAction",
                                            "deviceAddress",
                                            "deviceCustomDate1",
                                            "deviceCustomDate1Label",
                                            "deviceCustomDate2",
                                            "deviceCustomDate2Label",
                                            "deviceCustomNumber1",
                                            "deviceCustomNumber1Label",
                                            "deviceCustomNumber2",
                                            "deviceCustomNumber2Label",
                                            "deviceCustomNumber3",
                                            "deviceCustomNumber3Label",
                                            "deviceCustomString1",
                                            "deviceCustomString1Label",
                                            "deviceCustomString2",
                                            "deviceCustomString2Label",
                                            "deviceCustomString3",
                                            "deviceCustomString3Label",
                                            "deviceCustomString4",
                                            "deviceCustomString4Label",
                                            "deviceCustomString5",
                                            "deviceCustomString5Label",
                                            "deviceCustomString6",
                                            "deviceCustomString6Label",
                                            "deviceDirection",
                                            "deviceDnsDomain",
                                            "deviceEventCategory",
                                            "deviceExternalId",
                                            "deviceFacility",
                                            "deviceHostname",
                                            "deviceInboundInterface",
                                            "deviceMacAddress",
                                            "deviceOutboundInterface",
                                            "deviceProcessName",
                                            "deviceTranslatedAddress",
                                            "dhost",
                                            "dmac",
                                            "dntdom",
                                            "dpriv",
                                            "dproc",
                                            "dpt",
                                            "dst",
                                            "duid",
                                            "duser",
                                            "dvc",
                                            "dvchost",
                                            "end",
                                            "endTime",
                                            "eventOutcome",
                                            "externalId",
                                            "fileCreateTime",
                                            "fileHash",
                                            "fileHashMd5",
                                            "fileHashSha1",
                                            "fileHashSha256",
                                            "fileHashSha512",
                                            "fileId",
                                            "fileModificationTime",
                                            "fileName",
                                            "filePath",
                                            "filePermission",
                                            "fileSize",
                                            "fileType",
                                            "fname",
                                            "fsize",
                                            "in",
                                            "message",
                                            "msg",
                                            "oldfileCreateTime",
                                            "oldfileHash",
                                            "oldfileId",
                                            "oldfileModificationTime",
                                            "oldfileName",
                                            "oldfilePath",
                                            "oldfilePermission",
                                            "oldfileType",
                                            "oldfsize",
                                            "out",
                                            "outcome",
                                            "proto",
                                            "receiptTime",
                                            "request",
                                            "requestClientApplication",
                                            "requestCookies",
                                            "requestMethod",
                                            "requestURL",
                                            "rt",
                                            "shost",
                                            "smac",
                                            "sntdom",
                                            "sourceAddress",
                                            "sourceDnsDomain",
                                            "sourceHostName",
                                            "sourceMacAddress",
                                            "sourceNtDomain",
                                            "sourcePort",
                                            "sourceServiceName",
                                            "sourceTranslatedAddress",
                                            "sourceTranslatedPort",
                                            "sourceUserId",
                                            "sourceUserName",
                                            "sourceUserPrivileges",
                                            "spriv",
                                            "spt",
                                            "src",
                                            "start",
                                            "startTime",
                                            "suid",
                                            "suser",
                                            "transportProtocol"
                                        ]
                                    },
                                    "cef_value": {
                                        "contains": [
                                            "*"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Value",
                                        "key": "cef_value",
                                        "order": 5,
                                        "primary": true,
                                        "required": false
                                    },
                                    "container_id": {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Numeric container ID for the new artifact",
                                        "key": "container_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "contains": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Data type for each CEF field",
                                        "key": "contains",
                                        "order": 7,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": "event",
                                        "description": "Artifact label (default: event)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": "User created artifact",
                                        "description": "Name of the new artifact",
                                        "key": "name",
                                        "order": 0,
                                        "required": false
                                    },
                                    "run_automation": {
                                        "data_type": "boolean",
                                        "default": true,
                                        "description": "Run automation on newly created artifact(s) (default: true)",
                                        "key": "run_automation",
                                        "order": 8,
                                        "required": false
                                    },
                                    "source_data_identifier": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Source Data Idenitifier",
                                        "key": "source_data_identifier",
                                        "order": 3,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "9",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add artifact"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_artifact_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_artifact_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'add_artifact_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['geolocate_ip_1:action_result.parameter.ip', 'geolocate_ip_1:action_result.data.*.country_name', 'geolocate_ip_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'add_artifact_1' call\n    for results_item_1 in results_data_1:\n        parameters.append({\n            'name': results_item_1[0],\n            'label': \"event\",\n            'cef_name': \"mySomeKindOfField\",\n            'contains': \"\",\n            'cef_value': results_item_1[1],\n            'container_id': \"\",\n            'cef_dictionary': \"\",\n            'run_automation': \"true\",\n            'source_data_identifier': \"chris\",\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': results_item_1[2]},\n        })\n\n    phantom.act(action=\"add artifact\", parameters=parameters, assets=['mylocal'], name=\"add_artifact_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "geolocate ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3eda6ef1-ee72-46cd-8523-2a5f7f013dcc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 66,
                        "line_start": 36,
                        "message": "Configuring now",
                        "name": "add artifact",
                        "notes": "",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "add_artifact_1",
                        "required_params": {
                            "source_data_identifier": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 16
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a6aa271c-62cd-4bf3-a2de-98d1d672ac27",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a89b1eef-873c-4d82-9feb-8a85fb1e77b2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2e75b030-8e56-4765-81d1-4529671c875a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 17
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "07836e12-2311-4d66-973e-fa65fafdd97f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2e75b030-8e56-4765-81d1-4529671c875a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "38d8b749-6531-4b7c-9087-95d1e69765aa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 19
                    },
                    {
                        "action": "geolocate ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "cf_community_list_merge_1:custom_function_result.data.*.item"
                        },
                        "angle": 0,
                        "app": "MaxMind",
                        "appid": "c566e153-3118-4033-abda-14dd9748c91a",
                        "approver": "",
                        "assets": [
                            {
                                "action": "geolocate ip",
                                "actions": [
                                    "geolocate ip"
                                ],
                                "active": true,
                                "app_name": "MaxMind",
                                "app_version": "2.0.3",
                                "appid": "c566e153-3118-4033-abda-14dd9748c91a",
                                "asset_name": "maxmind",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "cf_community_list_merge_1:custom_function_result.data.*.item"
                                },
                                "has_app": true,
                                "id": 2,
                                "loaded": false,
                                "missing": false,
                                "name": "maxmind",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.continent_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Asia"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.country_iso_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "IN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.country_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "India"
                                        ],
                                        "map_info": "Country"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            23.0333
                                        ],
                                        "map_info": "latitude"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "numeric",
                                        "example_values": [
                                            72.6167
                                        ],
                                        "map_info": "longitude"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "203.88.139.34"
                                        ],
                                        "map_info": "IP Address"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "203.88.139.34"
                                        ],
                                        "map_info": "name"
                                    },
                                    {
                                        "data_path": "action_result.data.*.city_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ahmedabad"
                                        ],
                                        "map_info": "City"
                                    },
                                    {
                                        "data_path": "action_result.data.*.postal_code",
                                        "data_type": "string",
                                        "example_values": [
                                            380007
                                        ],
                                        "map_info": "Postal Code"
                                    },
                                    {
                                        "data_path": "action_result.data.*.as_org",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ],
                                        "map_info": "Organization"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state_iso_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "GJ"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.state_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Gujarat"
                                        ],
                                        "map_info": "State/Province"
                                    },
                                    {
                                        "data_path": "action_result.data.*.time_zone",
                                        "data_type": "string",
                                        "example_values": [
                                            "Asia/Kolkata"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.city",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ahmedabad"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "GJ"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "India"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "City: Ahmedabad, State: GJ, Country: India"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "allow_list": true,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to geolocate",
                                        "key": "ip",
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "GeoIP2",
                                "product_vendor": "MaxMind",
                                "targets": "2",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "geolocate ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def geolocate_ip_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('geolocate_ip_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'geolocate_ip_1' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_community_list_merge_1:custom_function_result.data.*.item'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'geolocate_ip_1' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'ip': custom_function_results_item_1[0],\n            })\n\n    phantom.act(action=\"geolocate ip\", parameters=parameters, assets=['maxmind'], callback=add_artifact_1, name=\"geolocate_ip_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 36,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "list_merge",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "38d8b749-6531-4b7c-9087-95d1e69765aa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 36,
                        "line_start": 15,
                        "message": "Configuring now",
                        "name": "geolocate ip",
                        "notes": "",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 440,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "geolocate_ip_1",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 20
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "list_merge"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_community_list_merge_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_community_list_merge_1() called')\n    \n    container_data_0 = phantom.collect2(container=container, datapath=['artifact:*.cef.sourceAddress', 'artifact:*.cef.myIp', 'artifact:*.cef.destinationAddress', 'artifact:*.id'])\n\n    parameters = []\n\n    container_data_0_0 = [item[0] for item in container_data_0]\n    container_data_0_1 = [item[1] for item in container_data_0]\n    container_data_0_2 = [item[2] for item in container_data_0]\n\n    parameters.append({\n        'input_1': container_data_0_0,\n        'input_2': container_data_0_1,\n        'input_3': container_data_0_2,\n        'input_4': None,\n        'input_5': None,\n        'input_6': None,\n        'input_7': None,\n        'input_8': None,\n        'input_9': None,\n        'input_10': None,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/list_merge\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/list_merge', parameters=parameters, name='cf_community_list_merge_1', callback=geolocate_ip_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/list_merge",
                        "cfInputs": {
                            "input_1": {
                                "collectionType": "container_data",
                                "dataPath": "artifact:*.cef.sourceAddress",
                                "paramName": "container_data_0_0",
                                "type": "list"
                            },
                            "input_10": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_2": {
                                "collectionType": "container_data",
                                "dataPath": "artifact:*.cef.myIp",
                                "paramName": "container_data_0_1",
                                "type": "list"
                            },
                            "input_3": {
                                "collectionType": "container_data",
                                "dataPath": "artifact:*.cef.destinationAddress",
                                "paramName": "container_data_0_2",
                                "type": "list"
                            },
                            "input_4": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_5": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_6": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_7": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_8": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_9": {
                                "dataPath": "",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 26,
                        "customFunction": "community/list_merge",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2e75b030-8e56-4765-81d1-4529671c875a",
                        "inPorts": [
                            "in"
                        ],
                        "input_1-0": "artifact:*.cef.sourceAddress",
                        "input_2-1": "artifact:*.cef.myIp",
                        "input_3-2": "artifact:*.cef.destinationAddress",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 104,
                        "line_start": 66,
                        "message": "Configuring now",
                        "name": "list_merge",
                        "notes": "",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 220,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "cf_community_list_merge_1",
                        "selectedCustomFunction": {
                            "description": "Merge 2-10 different data paths into a single output data path. For example, if IP addresses are stored in the fields sourceAddress, destinationAddress, and deviceAddress, then those three fields could be merged together to form a single list of IP addresses.",
                            "draftMode": false,
                            "id": 5,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 18,
                                    "input_type": "list",
                                    "name": "input_1",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 19,
                                    "input_type": "list",
                                    "name": "input_2",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 20,
                                    "input_type": "list",
                                    "name": "input_3",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 21,
                                    "input_type": "list",
                                    "name": "input_4",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 22,
                                    "input_type": "list",
                                    "name": "input_5",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 23,
                                    "input_type": "list",
                                    "name": "input_6",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 24,
                                    "input_type": "list",
                                    "name": "input_7",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 25,
                                    "input_type": "list",
                                    "name": "input_8",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 26,
                                    "input_type": "list",
                                    "name": "input_9",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "description": "",
                                    "id": 27,
                                    "input_type": "list",
                                    "name": "input_10",
                                    "placeholder": ""
                                }
                            ],
                            "name": "list_merge",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "list_merge",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 5,
                                    "data_path": "*.item",
                                    "description": "A combined list of all the values from all the input lists",
                                    "id": 9
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "chris/formatted data %% demo w email",
                                        "draft_mode": false,
                                        "id": 127,
                                        "name": "formatted data %% demo w email",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 21
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.0.40961"
    },
    "create_time": "2021-02-03T17:46:13.522075+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}