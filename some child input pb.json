{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_3",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_1",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "d8b22038a8af4b007f07775f46efcc8f086e1732",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 1000,
                    "y": 419.9999999999998
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 1000,
                    "y": 1000
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "format_1",
                        "id": "3",
                        "parameters": [
                            "playbook_input:ip",
                            "playbook_input:country_name"
                        ],
                        "template": "{0} is from {1}\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "format",
                    "x": 1000,
                    "y": 604.5
                }
            },
            "notes": ""
        },
        "input_spec": [
            {
                "contains": [],
                "description": "",
                "name": "country_name"
            },
            {
                "contains": [
                    "ip"
                ],
                "description": "",
                "name": "ip"
            }
        ],
        "output_spec": [
            {
                "contains": [],
                "datapaths": [
                    "format_1:formatted_data"
                ],
                "deduplicate": false,
                "description": "",
                "metadata": {},
                "name": "ip and country"
            },
            {
                "contains": [
                    "ip"
                ],
                "datapaths": [
                    "playbook_input:ip"
                ],
                "deduplicate": false,
                "description": "",
                "metadata": {
                    "playbook_input:ip": {
                        "contains": [
                            "ip"
                        ]
                    }
                },
                "name": "ip"
            }
        ],
        "playbook_type": "data",
        "python_version": "3",
        "schema": "5.0.3",
        "version": "5.0.1.66250"
    },
    "create_time": "2021-12-14T16:01:52.438509+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}